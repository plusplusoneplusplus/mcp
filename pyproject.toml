[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mcp-cs"
version = "0.1.0"
description = "MCP configuration based server"
authors = [
    {name = "Yiheng Tao", email = "example@example.com"}
]
requires-python = ">=3.11"
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    # Core dependencies
    "mcp>=1.7.1", # Model Context Protocol Python SDK
    # Vector database
    "chromadb>=0.4.22", # Vector database for semantic search
    # YAML parser
    "pyyaml>=6.0.1", # YAML parser
    "black>=25.0.01", # Python formatter
    # Process utilities
    "psutil>=5.9.5", # Process utilities for monitoring and management
    # HTTP/SSE server
    "uvicorn>=0.25.0", # ASGI server
    "starlette>=0.37.0", # ASGI framework
    "httpx>=0.26.0", # HTTP client
    "httpx-sse>=0.4.0", # SSE client for httpx
    "aiohttp>=3.8.0", # Async HTTP client for Azure DevOps REST API
    # LLM clients
    "openai>=1.14.3", # OpenAI Python SDK
    # graphrag
    "graphrag==2.3.0", # Microsoft GraphRAG for knowledge graph construction
    # Webdriver tools
    "selenium==4.18.1",
    "webdriver-manager==4.0.1",
    "playwright>=1.42.0", # Modern browser automation
    # Text processing
    "trafilatura>=1.6.2", # Web content extraction
    "beautifulsoup4>=4.12.0", # HTML parsing for extraction
    "markdownify>=0.11.6", # HTML to markdown conversion
    "mistune>=3.0.0", # Markdown to HTML conversion
    # Testing
    "pytest>=8.3.5",
    "pytest-asyncio>=0.21.1",
    "pytest-xdist>=3.3.1", # Parallel test execution
    "pytest-timeout>=2.1.0", # Test timeout support
    "requests>=2.31.0", # HTTP client for testing
    # Azure Data Explorer (Kusto)
    "azure-kusto-data>=5.0.0", # Azure Data Explorer client
    "azure-identity>=1.15.0", # Azure authentication
    # Embedding models
    "sentence-transformers>=4.0.0", # Lightweight embedding model for tests
    "regex>=2024.11.6",
    "detect-secrets>=1.4.0", # Secret scanning
    # Image processing (for chart extractor)
    "easyocr>=1.7.1", # Fast OCR for text extraction from images
    "opencv-python>=4.8.0", # OpenCV for image processing
    "numpy>=1.24.0", # NumPy for numerical operations
    "pandas>=2.2.0", # Pandas for data analysis
    "ipython>=8.0.0", # IPython for interactive computing
    "pillow>=9.5.0", # PIL for image handling
    # Log compression and parsing
    "msgpack>=1.0.5", # MessagePack serialization
    "zstandard>=0.21.0", # Zstandard compression
    "logparser==0.8.4", # Log parsing library
    "click>=8.1.3", # Command line interface
    # pre-commit
    "pre-commit>=4.2.0",
    # Git operations
    "GitPython>=3.1.40", # Python Git library
    "pydantic>=2.11.3",
    # Neo4j graph database
    "neo4j>=5.15.0", # Neo4j Python driver
    "typing-extensions>=4.8.0", # Enhanced typing support
]

[project.optional-dependencies]
dev = [
    "black",
    "isort",
    "flake8",
    "mypy",
]

[tool.setuptools]
packages = ["server", "mcp_tools", "mcp_core", "config", "utils"]

# This tells uv/pip to install the local packages in development mode
[tool.setuptools.package-data]
"*" = ["py.typed"]

[tool.black]
line-length = 88
target-version = ["py311"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"
timeout = 60  # 1 minute default timeout per test
timeout_method = "thread"  # Use thread-based timeout (more reliable than signal)

[dependency-groups]
dev = [
    "black>=25.1.0",
    "flake8>=7.2.0",
    "isort>=6.0.1",
    "mypy>=1.15.0",
]
