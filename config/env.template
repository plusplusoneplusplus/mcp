# MCP Environment Template
# Copy this file to .env and modify as needed

# Repository Information
GIT_ROOT=/path/to/git/repo
PROJECT_NAME=mcp_project
PRIVATE_TOOL_ROOT=/path/to/private/tools

# Multiple Git Roots (Multi-Project Support)
# Use GIT_ROOT_<PROJECT_NAME> pattern for multiple repositories
# Examples:
# GIT_ROOT_PROJECT_A=/path/to/project-a
# GIT_ROOT_PROJECT_B=/path/to/project-b
# GIT_ROOT_MICROSERVICE_X=/path/to/microservice
# GIT_ROOT_FRONTEND=/path/to/frontend
# GIT_ROOT_BACKEND=/path/to/backend

# Additional Paths
# Prefix with MCP_PATH_ to add custom paths
MCP_PATH_DATA=/path/to/data
MCP_PATH_LOGS=/path/to/logs
MCP_PATH_CONFIG=/path/to/config

# Neo4j Database Configuration
# Connection settings for the graph database
NEO4J_URI=bolt://localhost:7687
NEO4J_USERNAME=neo4j
NEO4J_PASSWORD=testpassword
NEO4J_DATABASE=neo4j

# Neo4j debugging and performance
NEO4J_DEBUG=false

# Azure Repo Configuration
# Prefix with AZREPO_ for Azure repo parameters
AZREPO_ORG=your-organization
AZREPO_PROJECT=your-project
AZREPO_REPO=your-repository
AZREPO_BRANCH=main
# Work item defaults
AZREPO_AREA_PATH=your-area-path
AZREPO_ITERATION=your-iteration-path

# Authentication Options (choose one):
# Option 1: Direct bearer token (hardcoded)
# AZREPO_BEARER_TOKEN=your-bearer-token

# Option 2: Command to get bearer token (dynamic)
# The command should output JSON with an "accessToken" property
AZREPO_BEARER_TOKEN_COMMAND=az account get-access-token --scope "499b84ac-1321-427f-aa17-267ca6975798/.default"

# Azure Data Explorer (Kusto) Configuration
KUSTO_CLUSTER_URL=https://your-cluster.kusto.windows.net
KUSTO_DATABASE=your-database
# Optional: If using Service Principal authentication, leave blank if using other authentication methods
# KUSTO_APP_ID=your-app-id
# KUSTO_APP_KEY=your-app-key
# KUSTO_TENANT_ID=your-tenant-id

# Tool History Configuration
# Controls whether tool invoke history is stored
TOOL_HISTORY_ENABLED=true
# Path where tool invoke history will be stored
TOOL_HISTORY_PATH=.history
# Path where images will be stored
IMAGE_DIR=.images

# Vector Store Configuration
# Path where vector store data will be persisted
VECTOR_STORE_PATH=.vector_store

# Browser configuration
BROWSER_TYPE=chrome
CLIENT_TYPE=playwright
BROWSER_PROFILE_PATH=.browserprofile

# Command Executor Periodic Status Reporting
# Enable/disable periodic status reporting for background processes
PERIODIC_STATUS_ENABLED=false
# Interval between status reports in seconds
PERIODIC_STATUS_INTERVAL=30.0
# Maximum command length to display in status reports
PERIODIC_STATUS_MAX_COMMAND_LENGTH=60

# Command Executor Memory Management (PR #156)
# Maximum number of completed processes to keep in memory (prevents memory leaks)
COMMAND_EXECUTOR_MAX_COMPLETED_PROCESSES=100
# Time-to-live for completed processes in seconds (0 = disabled)
COMMAND_EXECUTOR_COMPLETED_PROCESS_TTL=3600
# Enable automatic background cleanup of expired processes
COMMAND_EXECUTOR_AUTO_CLEANUP_ENABLED=true
# Interval between automatic cleanup runs in seconds
COMMAND_EXECUTOR_CLEANUP_INTERVAL=300

# Background job history persistence
JOB_HISTORY_PERSISTENCE_ENABLED=false
# json or sqlite
JOB_HISTORY_STORAGE_BACKEND=json
# Path to store job history file
JOB_HISTORY_STORAGE_PATH=.job_history.json
# Maximum number of job records to keep
JOB_HISTORY_MAX_ENTRIES=1000
# Maximum age of completed jobs to retain in days
JOB_HISTORY_MAX_AGE_DAYS=30

# MCP Plugin Configuration
# Controls which tools are registered and available

# Plugin Enable/Disable Configuration
# Mode for plugin filtering: "all" (default), "whitelist", or "blacklist"
MCP_PLUGIN_MODE=all
# Comma-separated list of plugins to enable (used with whitelist mode)
# MCP_ENABLED_PLUGINS=tool1,tool2,tool3
# Comma-separated list of plugins to disable (used with blacklist mode)
# MCP_DISABLED_PLUGINS=tool4,tool5

# Ecosystem Configuration
# Ecosystems to enable: "*" for all (default) or comma-separated list (e.g., "microsoft,general,open-source")
# Available ecosystems: microsoft, general, open-source
MCP_ECOSYSTEMS=*

# OS Configuration
# OS types to enable: "*" for all, comma-separated list (e.g., "windows,non-windows"), or leave empty for auto-detection
# Available OS types: windows, non-windows, all
# When MCP_OS is not set or empty, the system will auto-detect the current OS:
#   - Windows systems → loads "windows" tools only
#   - macOS/Linux systems → loads "non-windows" tools only
#   - Unknown systems → fallback to "*" (all tools)
# MCP_OS=*

# Tool Source Configuration
# Whether to register code-based tools (default: true)
MCP_REGISTER_CODE_TOOLS=true
# Whether to register YAML-based tools (default: true)
MCP_REGISTER_YAML_TOOLS=true
# Whether YAML definitions should override code tools (default: true)
MCP_YAML_OVERRIDES_CODE=true

# Tool Discovery Configuration
# Comma-separated list of additional plugin root directories
# MCP_PLUGIN_ROOTS=/path/to/custom/plugins,/path/to/other/plugins
# Comma-separated list of additional YAML tool paths
# MCP_YAML_TOOL_PATHS=/path/to/tools.yaml,/path/to/other/tools.yaml
# Comma-separated list of base classes to exclude from registration
# MCP_EXCLUDED_BASE_CLASSES=CustomBaseClass,AnotherBaseClass
# Comma-separated list of tool names to exclude from registration
# MCP_EXCLUDED_TOOL_NAMES=unwanted_tool,deprecated_tool

# DataFrame Management Configuration
# Maximum memory usage for DataFrame storage in MB
DATAFRAME_MAX_MEMORY_MB=1024
# Default time-to-live for stored DataFrames in seconds
DATAFRAME_DEFAULT_TTL_SECONDS=3600
# Interval between automatic cleanup runs in seconds
DATAFRAME_CLEANUP_INTERVAL_SECONDS=300
# Maximum number of DataFrames to store
DATAFRAME_MAX_DATAFRAMES=1000
# Storage backend: "memory" or "persistent"
DATAFRAME_STORAGE_BACKEND=memory
# Path for persistent DataFrame storage (when using persistent backend)
DATAFRAME_PERSISTENT_STORAGE_PATH=.dataframes

# Other custom settings can be added as needed
